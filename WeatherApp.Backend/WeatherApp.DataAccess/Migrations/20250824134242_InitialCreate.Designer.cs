// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApp.DataAccess.Context;

#nullable disable

namespace WeatherApp.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250824134242_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("WeatherApp.DataAccess.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Austria",
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = 2,
                            Country = "UK",
                            Name = "London"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Slovenia",
                            Name = "Ljubljana"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Serbia",
                            Name = "Belgrade"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Malta",
                            Name = "Valletta"
                        });
                });

            modelBuilder.Entity("WeatherApp.DataAccess.Models.UserPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowSunriseOrSunSet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TemperatureUnit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserPreference");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ShowSunriseOrSunSet = true,
                            TemperatureUnit = 0,
                            UserId = "DemoUser"
                        });
                });

            modelBuilder.Entity("WeatherApp.DataAccess.Models.WeatherRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SunriseTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SunsetTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CityId", "RecordedAt");

                    b.ToTable("WeatherStatistics");
                });

            modelBuilder.Entity("WeatherApp.DataAccess.Models.WeatherRecord", b =>
                {
                    b.HasOne("WeatherApp.DataAccess.Models.City", "City")
                        .WithMany("WeatherRecords")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WeatherApp.DataAccess.Models.City", b =>
                {
                    b.Navigation("WeatherRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
